{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "{\"createdOn\":\"Windows\",\"createdBy\":\"Amplify\",\"createdWith\":\"12.13.1\",\"stackType\":\"function-Lambda\",\"metadata\":{\"whyContinueWithGen1\":\"I find the Gen 1 CLI easier to use\"}}",
  "Parameters": {
    "CloudWatchRule": {
      "Type": "String",
      "Default": "NONE",
      "Description": " Schedule Expression"
    },
    "deploymentBucketName": {
      "Type": "String"
    },
    "env": {
      "Type": "String"
    },
    "s3Key": {
      "Type": "String"
    }
  },
  "Conditions": {
    "ShouldNotCreateEnvResources": {
      "Fn::Equals": [
        {
          "Ref": "env"
        },
        "NONE"
      ]
    }
  },
  "Resources": {
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Metadata": {
        "aws:asset:path": "./src",
        "aws:asset:property": "Code"
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "deploymentBucketName"
          },
          "S3Key": {
            "Ref": "s3Key"
          }
        },
        "Handler": "index.handler",
        "FunctionName": {
          "Fn::If": [
            "ShouldNotCreateEnvResources",
            "chatbotapiLambda",
            {
              "Fn::Join": [
                "",
                [
                  "chatbotapiLambda",
                  "-",
                  {
                    "Ref": "env"
                  }
                ]
              ]
            }
          ]
        },
        "Environment": {
          "Variables": {
            "ENV": {
              "Ref": "env"
            },
            "REGION": {
              "Ref": "AWS::Region"
            },
            "TRAINING_BUCKET": {
              "Ref": "TrainingBucket"
            },
            "TRAINING_TABLE": {
              "Ref": "TrainingTable"
            },
            "CHUNKS_TABLE": {
              "Ref": "ChunksTable"
            },
            "S3_BUCKET": "ai-testing-jw"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Layers": [],
        "Timeout": 300,
        "MemorySize": 2048
      }
    },
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::If": [
            "ShouldNotCreateEnvResources",
            "chatbotwidget2LambdaRole62cfb17c",
            {
              "Fn::Join": [
                "",
                [
                  "chatbotwidget2LambdaRole62cfb17c",
                  "-",
                  {
                    "Ref": "env"
                  }
                ]
              ]
            }
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        }
      }
    },
    "lambdaexecutionpolicy": {
      "DependsOn": [
        "LambdaExecutionRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "lambda-execution-policy",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": {
                "Fn::Sub": [
                  "arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*",
                  {
                    "region": {
                      "Ref": "AWS::Region"
                    },
                    "account": {
                      "Ref": "AWS::AccountId"
                    },
                    "lambda": {
                      "Ref": "LambdaFunction"
                    }
                  }
                ]
              }
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:PutItem",
                "dynamodb:GetItem",
                "dynamodb:DeleteItem",
                "dynamodb:Query"
              ],
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TrainingTable",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "ChunksTable",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ChunksTable",
                          "Arn"
                        ]
                      },
                      "/index/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject",
                "s3:GetObject",
                "s3:DeleteObject"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TrainingBucket",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                },
                "arn:aws:s3:::ai-testing-jw/*"
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "bedrock:InvokeModel"
              ],
              "Resource": "*"
            }
          ]
        }
      }
    },
    "TrainingTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": {
          "Fn::If": [
            "ShouldNotCreateEnvResources",
            "chatbot-training-contexts",
            {
              "Fn::Join": [
                "",
                [
                  "chatbot-training-contexts-",
                  {
                    "Ref": "env"
                  }
                ]
              ]
            }
          ]
        },
        "AttributeDefinitions": [
          {
            "AttributeName": "contextId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "contextId",
            "KeyType": "HASH"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    },
    "ChunksTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": {
          "Fn::If": [
            "ShouldNotCreateEnvResources",
            "chatbot-document-chunks",
            {
              "Fn::Join": [
                "",
                [
                  "chatbot-document-chunks-",
                  {
                    "Ref": "env"
                  }
                ]
              ]
            }
          ]
        },
        "AttributeDefinitions": [
          {
            "AttributeName": "docId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "chunkId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "contextId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "agentName",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "docId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "chunkId",
            "KeyType": "RANGE"
          }
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "contextId-index",
            "KeySchema": [
              {
                "AttributeName": "contextId",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          },
          {
            "IndexName": "AgentIndex",
            "KeySchema": [
              {
                "AttributeName": "agentName",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    },
    "TrainingBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Fn::If": [
            "ShouldNotCreateEnvResources",
            "chatbot-training-data",
            {
              "Fn::Join": [
                "",
                [
                  "chatbot-training-data-",
                  {
                    "Ref": "env"
                  },
                  "-",
                  {
                    "Ref": "AWS::AccountId"
                  }
                ]
              ]
            }
          ]
        },
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET",
                "PUT",
                "POST",
                "DELETE"
              ],
              "AllowedOrigins": [
                "*"
              ],
              "MaxAge": 3000
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "Name": {
      "Value": {
        "Ref": "LambdaFunction"
      }
    },
    "Arn": {
      "Value": {
        "Fn::GetAtt": [
          "LambdaFunction",
          "Arn"
        ]
      }
    },
    "Region": {
      "Value": {
        "Ref": "AWS::Region"
      }
    },
    "LambdaExecutionRole": {
      "Value": {
        "Ref": "LambdaExecutionRole"
      }
    },
    "LambdaExecutionRoleArn": {
      "Value": {
        "Fn::GetAtt": [
          "LambdaExecutionRole",
          "Arn"
        ]
      }
    }
  }
}